networks:
  common-net: {}

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: db1
    container_name: db
    ports:
      - 5432:5432
    networks:
    - common-net

  auth: 
    image: main-image
    build:
      context:    ./docker
      dockerfile: main-image
    entrypoint: bash -c "mkdir -p cover &&
      go build -cover -o /app cmd/sso/main.go &&
      GOCOVERDIR=cover /app"
    volumes:
      - "$PWD:$PWD:rw"
    working_dir: $PWD
    container_name: auth
    depends_on:
      - db
    ports:
     - 10000:10000
    networks:
    - common-net

  shop: 
    image: main-image
    build:
      context:    ./docker
      dockerfile: main-image
    entrypoint: bash -c "mkdir -p cover &&
      go build -cover -o /app cmd/shop/main.go &&
      GOCOVERDIR=cover /app"
    volumes:
      - "$PWD:$PWD:rw"
    working_dir: $PWD
    container_name: shop
    ports:
     - 10001:10001
    networks:
      - common-net
    healthcheck:
      test: ["CMD", "grpcurl", "-plaintext","localhost:10001", "describe"]
      interval: 5s
      retries: 5

  products: 
    image: main-image
    build:
      context:    ./docker
      dockerfile: main-image
    entrypoint: bash -c "mkdir -p cover &&
      go build -cover -o /app cmd/products/main.go &&
      GOCOVERDIR=cover /app"
    volumes:
      - "$PWD:$PWD:rw"
    working_dir: $PWD
    container_name: products
    ports:
     - 10002:10002
    networks:
      - common-net
    healthcheck:
      test: ["CMD", "grpcurl", "-plaintext","localhost:10002", "describe"]
      interval: 5s
      retries: 5

  branch: 
    image: main-image
    build:
      context:    ./docker
      dockerfile: main-image
    entrypoint: bash -c "mkdir -p cover &&
      go build -cover -o /app cmd/branch/main.go &&
      GOCOVERDIR=cover /app"
    volumes:
      - "$PWD:$PWD:rw"
    working_dir: $PWD
    container_name: branch
    ports:
     - 10003:10003
    networks:
      - common-net
    healthcheck:
      test: ["CMD", "grpcurl", "-plaintext","localhost:10003", "describe"]
      interval: 3s
      retries: 5

  test: 
    container_name: test
    image: main-image
    build:
      context:    ./docker
      dockerfile: main-image
    entrypoint:  bash -c "
      go run cmd/migrator/main.go --migrations-path=migrations &&
      go run cmd/migrator/main.go --migrations-path=tests/migrations --migrations-table=migrations-test &&
      go test -v ./... " 
    volumes:
      - "$PWD:$PWD:rw"
    working_dir: $PWD
    depends_on:
      shop : 
        condition: service_healthy
      branch : 
        condition: service_healthy
    networks:
    - common-net