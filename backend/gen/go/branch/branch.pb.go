// Версия ProtoBuf

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.12.4
// source: branch/branch.proto

// Текущий пакет - указывает пространство имен для сервиса и сообщений. Помогает избегать конфликтов имен.

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewBranchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ShopId        int32                  `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Address       string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Site          string                 `protobuf:"bytes,5,opt,name=site,proto3" json:"site,omitempty"`
	BranchType    string                 `protobuf:"bytes,6,opt,name=branch_type,json=branchType,proto3" json:"branch_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewBranchRequest) Reset() {
	*x = NewBranchRequest{}
	mi := &file_branch_branch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBranchRequest) ProtoMessage() {}

func (x *NewBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_branch_branch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBranchRequest.ProtoReflect.Descriptor instead.
func (*NewBranchRequest) Descriptor() ([]byte, []int) {
	return file_branch_branch_proto_rawDescGZIP(), []int{0}
}

func (x *NewBranchRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewBranchRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *NewBranchRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewBranchRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NewBranchRequest) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *NewBranchRequest) GetBranchType() string {
	if x != nil {
		return x.BranchType
	}
	return ""
}

type NewBranchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewBranchResponse) Reset() {
	*x = NewBranchResponse{}
	mi := &file_branch_branch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBranchResponse) ProtoMessage() {}

func (x *NewBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_branch_branch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBranchResponse.ProtoReflect.Descriptor instead.
func (*NewBranchResponse) Descriptor() ([]byte, []int) {
	return file_branch_branch_proto_rawDescGZIP(), []int{1}
}

type AlterBranchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BranchId      int32                  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	BranchInfo    *BranchInfo            `protobuf:"bytes,2,opt,name=branch_info,json=branchInfo,proto3" json:"branch_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlterBranchRequest) Reset() {
	*x = AlterBranchRequest{}
	mi := &file_branch_branch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterBranchRequest) ProtoMessage() {}

func (x *AlterBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_branch_branch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterBranchRequest.ProtoReflect.Descriptor instead.
func (*AlterBranchRequest) Descriptor() ([]byte, []int) {
	return file_branch_branch_proto_rawDescGZIP(), []int{2}
}

func (x *AlterBranchRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *AlterBranchRequest) GetBranchInfo() *BranchInfo {
	if x != nil {
		return x.BranchInfo
	}
	return nil
}

type AlterBranchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlterBranchResponse) Reset() {
	*x = AlterBranchResponse{}
	mi := &file_branch_branch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterBranchResponse) ProtoMessage() {}

func (x *AlterBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_branch_branch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterBranchResponse.ProtoReflect.Descriptor instead.
func (*AlterBranchResponse) Descriptor() ([]byte, []int) {
	return file_branch_branch_proto_rawDescGZIP(), []int{3}
}

type DeleteBranchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BranchId      int32                  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBranchRequest) Reset() {
	*x = DeleteBranchRequest{}
	mi := &file_branch_branch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBranchRequest) ProtoMessage() {}

func (x *DeleteBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_branch_branch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBranchRequest.ProtoReflect.Descriptor instead.
func (*DeleteBranchRequest) Descriptor() ([]byte, []int) {
	return file_branch_branch_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteBranchRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

type DeleteBranchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBranchResponse) Reset() {
	*x = DeleteBranchResponse{}
	mi := &file_branch_branch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBranchResponse) ProtoMessage() {}

func (x *DeleteBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_branch_branch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBranchResponse.ProtoReflect.Descriptor instead.
func (*DeleteBranchResponse) Descriptor() ([]byte, []int) {
	return file_branch_branch_proto_rawDescGZIP(), []int{5}
}

type BranchInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BranchId      int32                  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ShopId        int32                  `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Address       string                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Site          string                 `protobuf:"bytes,6,opt,name=site,proto3" json:"site,omitempty"`
	BranchType    string                 `protobuf:"bytes,7,opt,name=branch_type,json=branchType,proto3" json:"branch_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BranchInfo) Reset() {
	*x = BranchInfo{}
	mi := &file_branch_branch_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BranchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BranchInfo) ProtoMessage() {}

func (x *BranchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_branch_branch_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BranchInfo.ProtoReflect.Descriptor instead.
func (*BranchInfo) Descriptor() ([]byte, []int) {
	return file_branch_branch_proto_rawDescGZIP(), []int{6}
}

func (x *BranchInfo) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *BranchInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BranchInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *BranchInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BranchInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BranchInfo) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *BranchInfo) GetBranchType() string {
	if x != nil {
		return x.BranchType
	}
	return ""
}

type ListBranchesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShopId        int32                  `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBranchesRequest) Reset() {
	*x = ListBranchesRequest{}
	mi := &file_branch_branch_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBranchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBranchesRequest) ProtoMessage() {}

func (x *ListBranchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_branch_branch_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBranchesRequest.ProtoReflect.Descriptor instead.
func (*ListBranchesRequest) Descriptor() ([]byte, []int) {
	return file_branch_branch_proto_rawDescGZIP(), []int{7}
}

func (x *ListBranchesRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type ListBranchesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          []*BranchInfo          `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBranchesResponse) Reset() {
	*x = ListBranchesResponse{}
	mi := &file_branch_branch_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBranchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBranchesResponse) ProtoMessage() {}

func (x *ListBranchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_branch_branch_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBranchesResponse.ProtoReflect.Descriptor instead.
func (*ListBranchesResponse) Descriptor() ([]byte, []int) {
	return file_branch_branch_proto_rawDescGZIP(), []int{8}
}

func (x *ListBranchesResponse) GetInfo() []*BranchInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_branch_branch_proto protoreflect.FileDescriptor

var file_branch_branch_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0xb0, 0x01,
	0x0a, 0x10, 0x4e, 0x65, 0x77, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x12, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x15, 0x0a,
	0x13, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xc7, 0x01, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xa8, 0x02, 0x0a, 0x06, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x49, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x18, 0x2e,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x2e, 0x4e, 0x65, 0x77, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x12, 0x1a, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x18, 0x5a, 0x16, 0x70, 0x69, 0x6d, 0x2d, 0x73, 0x79, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_branch_branch_proto_rawDescOnce sync.Once
	file_branch_branch_proto_rawDescData = file_branch_branch_proto_rawDesc
)

func file_branch_branch_proto_rawDescGZIP() []byte {
	file_branch_branch_proto_rawDescOnce.Do(func() {
		file_branch_branch_proto_rawDescData = protoimpl.X.CompressGZIP(file_branch_branch_proto_rawDescData)
	})
	return file_branch_branch_proto_rawDescData
}

var file_branch_branch_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_branch_branch_proto_goTypes = []any{
	(*NewBranchRequest)(nil),     // 0: branch.NewBranchRequest
	(*NewBranchResponse)(nil),    // 1: branch.NewBranchResponse
	(*AlterBranchRequest)(nil),   // 2: branch.AlterBranchRequest
	(*AlterBranchResponse)(nil),  // 3: branch.AlterBranchResponse
	(*DeleteBranchRequest)(nil),  // 4: branch.DeleteBranchRequest
	(*DeleteBranchResponse)(nil), // 5: branch.DeleteBranchResponse
	(*BranchInfo)(nil),           // 6: branch.BranchInfo
	(*ListBranchesRequest)(nil),  // 7: branch.ListBranchesRequest
	(*ListBranchesResponse)(nil), // 8: branch.ListBranchesResponse
}
var file_branch_branch_proto_depIdxs = []int32{
	6, // 0: branch.AlterBranchRequest.branch_info:type_name -> branch.BranchInfo
	6, // 1: branch.ListBranchesResponse.info:type_name -> branch.BranchInfo
	7, // 2: branch.Branch.ListBranches:input_type -> branch.ListBranchesRequest
	0, // 3: branch.Branch.NewBranch:input_type -> branch.NewBranchRequest
	2, // 4: branch.Branch.AlterBranch:input_type -> branch.AlterBranchRequest
	4, // 5: branch.Branch.DeleteBranch:input_type -> branch.DeleteBranchRequest
	8, // 6: branch.Branch.ListBranches:output_type -> branch.ListBranchesResponse
	1, // 7: branch.Branch.NewBranch:output_type -> branch.NewBranchResponse
	3, // 8: branch.Branch.AlterBranch:output_type -> branch.AlterBranchResponse
	5, // 9: branch.Branch.DeleteBranch:output_type -> branch.DeleteBranchResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_branch_branch_proto_init() }
func file_branch_branch_proto_init() {
	if File_branch_branch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_branch_branch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_branch_branch_proto_goTypes,
		DependencyIndexes: file_branch_branch_proto_depIdxs,
		MessageInfos:      file_branch_branch_proto_msgTypes,
	}.Build()
	File_branch_branch_proto = out.File
	file_branch_branch_proto_rawDesc = nil
	file_branch_branch_proto_goTypes = nil
	file_branch_branch_proto_depIdxs = nil
}
